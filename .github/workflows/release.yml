name: Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release Type'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
        default: 'patch'

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        uses: astral-sh/setup-uv-action@v1

      - name: Get current version
        id: current_version
        run: |
          echo "version=$(uv version --short)" >> $GITHUB_OUTPUT

      - name: Bump version
        run: |
          uv version --bump ${{ github.event.inputs.release_type }}
          uv lock --upgrade-package msg91-py

      - name: Get new version
        id: new_version
        run: |
          echo "version=$(uv version --short)" >> $GITHUB_OUTPUT

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Commit and tag version bump
        run: |
          git add pyproject.toml uv.lock
          git commit -m "Bump version to ${{ steps.new_version.outputs.version }}"
          git tag -a v${{ steps.new_version.outputs.version }} -m "Version ${{ steps.new_version.outputs.version }}"

      - name: Push commit and tag
        run: |
          git push
          git push origin v${{ steps.new_version.outputs.version }}

      - name: Generate changelog
        id: changelog
        run: |
          previous_tag=$(git describe --tags --abbrev=0 v${{ steps.current_version.outputs.version }} 2>/dev/null || echo "")
          if [ -z "$previous_tag" ]; then
            echo "CHANGELOG<<EOF" >> $GITHUB_ENV
            git log --pretty=format:"* %s (%h)" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          else
            echo "CHANGELOG<<EOF" >> $GITHUB_ENV
            git log --pretty=format:"* %s (%h)" $previous_tag..HEAD >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.new_version.outputs.version }}
          name: Release v${{ steps.new_version.outputs.version }}
          body: |
            ## Changes in v${{ steps.new_version.outputs.version }}

            ${{ env.CHANGELOG }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
